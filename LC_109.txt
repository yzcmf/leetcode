109. Convert Sorted List to Binary Search Tree

Given a singly linked list where elements are sorted in ascending order, convert it to a height balanced BST.

class Solution {
public:
    TreeNode* sortedListToBST(ListNode* head) {
       int len = 0;
       ListNode*cur = head;
       while(cur)
       {
           len++;
           cur = cur->next;
       }
       TreeNode*root = sortedListToBST(head,0,len-1);
       return root;
    }
    
    TreeNode* sortedListToBST(ListNode*&head,int start,int end)
    {
        if(start>end) return NULL;
        int mid = (start+end)/2;
        TreeNode * leftChild = sortedListToBST(head,start,mid-1);
        TreeNode * root = new TreeNode(head->val);
        head = head->next;
        TreeNode * rightChild = sortedListToBST(head,mid+1,end);
        root->left = leftChild;
        root->right = rightChild;
        return root;
    }
};