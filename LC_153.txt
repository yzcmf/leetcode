153. Find Minimum in Rotated Sorted Array

Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

You may assume no duplicate exists in the array.

class Solution {
public:
    int findMin(vector<int>& nums) {
        if(nums.empty()) return -1;
        int start = 0,end =nums.size()-1;
        while(start+1<end) // leave two elements when meet the rotated array problems;
        {
            int mid = (start+end)/2;
            if(nums[mid] < nums[end]) //Note for the no rotated case;we choose the mid with the end here;
            {
                end = mid;
            }
            else
            {
                start = mid;
            }
        }
        if (nums[start] < nums[end]) {
            return nums[start];
        } else {
            return nums[end];
        }
    }
};