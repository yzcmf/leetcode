63. Unique Paths II

Follow up for "Unique Paths":

Now consider if some obstacles are added to the grids. How many unique paths would there be?

An obstacle and empty space is marked as 1 and 0 respectively in the grid.

For example,

There is one obstacle in the middle of a 3x3 grid as illustrated below.

[
  [0,0,0],
  [0,1,0],
  [0,0,0]
]

The total number of unique paths is 2.

Note: m and n will be at most 100.

class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        //Rolled array;
        int m = obstacleGrid.size();
        int n = obstacleGrid[0].size();
        if(m==0 || n==0|| obstacleGrid[0][0]==1) return 0;
        vector<int>dp(n,1);
        //Initialize the first row;
        for(int j=1;j<n;j++)
            {
                if(obstacleGrid[0][j] == 1)
                {
                    dp[j] = 0;
                    continue;
                }
                dp[j] = dp[j-1];
        }
        for(int i=1;i<m;i++)
        {
            dp[0] = obstacleGrid[i][0]==1 ? 0 : dp[0];//Initialize the first col;
            for(int j=1;j<n;j++)
            {
                if(obstacleGrid[i][j] == 1)
                {
                    dp[j] = 0;
                    continue;
                }
                dp[j] += dp[j-1];
            }
        }
        return dp[n-1];   
    }
};