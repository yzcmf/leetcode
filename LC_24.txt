24. Swap Nodes in Pairs

Given a linked list, swap every two adjacent nodes and return its head.

For example,
Given 1->2->3->4, you should return the list as 2->1->4->3.

Your algorithm should use only constant space. You may not modify the values in the list, only nodes itself can be changed. 

class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        ListNode* dummy = new ListNode(-1);
        dummy->next = head;
        ListNode* p = dummy;
        while(p->next && p->next->next)
        {
            ListNode* m = p->next;
            ListNode* t = p->next->next;
            ListNode* k = p->next->next->next;
            m->next = k;
            t->next = m;
            p->next = t;
           
            p = p->next->next; // Two nodes one time;
        }
        
        return dummy->next; //The node head have been modified, we could only return the dummy->next;
    }
};