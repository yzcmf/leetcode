121. Best Time to Buy and Sell Stock

Say you have an array for which the ith element is the price of a given stock on day i.

If you were only permitted to complete at most one transaction (ie, buy one and sell one share of the stock), design an algorithm to find the maximum profit.

Example 1:

Input: [7, 1, 5, 3, 6, 4]
Output: 5

max. difference = 6-1 = 5 (not 7-1 = 6, as selling price needs to be larger than buying price)

Example 2:

Input: [7, 6, 4, 3, 1]
Output: 0

In this case, no transaction is done, i.e. max profit = 0.


//Key:we need the min_price for the compartion;
class Solution {
public:
    /**
     * @param prices: Given an integer array
     * @return: Maximum profit
     */
    int maxProfit(vector<int> &prices) {
        // write your code here
        
        if(prices.empty() || prices.size() == 1) return 0;
        int max_profit =0, min_price = prices[0];
        
        for(int i=1;i<prices.size();i++)
        {
            if(prices[i] < min_price)
            min_price = prices[i];
            else
            max_profit = max(max_profit, prices[i]-min_price);
        }
        
        return max_profit;
    }
};