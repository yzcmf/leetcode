213. House Robber II

Note: This is an extension of House Robber.

After robbing those houses on that street, the thief has found himself a new place for his thievery so that he will not get too much attention. This time, all houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, the security system for these houses remain the same as for those in the previous street.

Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.

class Solution {
public:
    int rob(vector<int>& nums) {
        if (nums.size() <= 1) return nums.empty() ? 0 : nums[0];
        vector<int> a=nums, b=nums;
        a.erase(a.begin()); 
        b.pop_back();
        return max(rob_helper(a),rob_helper(b));
    }
    int rob_helper(vector<int> &nums) {
        if (nums.size()<= 1) return nums.empty() ? 0 : nums[0];
        vector<int>dp{nums[0], max(nums[0],nums[1])};
        for (int i=2; i<nums.size(); i++) {
            dp.push_back(max(dp[i-2]+nums[i],dp[i-1]));
        }
        return dp.back();
    }
};