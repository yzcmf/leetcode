53. Maximum Subarray

Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6. 

//--Common Solution
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int sum=0;
        int res = INT_MIN;
        for(int i=0;i<nums.size();i++)
        {
            sum += nums[i];
            res = max(res,sum);
            if(sum<0)
            sum = 0;
        }
        return res;
    }
};
//--DP Solution
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        // write your code here
        int n = nums.size();
        if(n<=0) return 0;
        int max_sum = nums[0], cur_sum = nums[0];
        for(int i=1; i<n; i++) {
            cur_sum = cur_sum<=0 ? nums[i] : nums[i]+cur_sum;
            max_sum = max(max_sum,cur_sum);
        }
        return max_sum;
    }
};