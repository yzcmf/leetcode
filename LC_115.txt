115. Distinct Subsequences

Given a string S and a string T, count the number of distinct subsequences of T in S.

A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, "ACE" is a subsequence of "ABCDE" while "AEC" is not).

Here is an example:
S = "rabbbit", T = "rabbit"

Return 3.

class Solution {
public:
    int numDistinct(string s, string t) {
        int n = s.size(), m = t.size();
        vector<int>DP(n+1, 1);
        for(int i=1; i<=m; i++){
            int upLeft = DP[0];
            DP[0] = 0;
            for(int j=1; j<=n; j++) {
                int temp = DP[j];
                DP[j] = DP[j-1];
                if(s[j-1] == t[i-1]) DP[j] += upLeft;
                upLeft = temp;
            }
        }
        return DP[n];
    }
};
//http://bangbingsyb.blogspot.com/2014/11/leetcode-distinct-subsequences.html