108. Convert Sorted Array to Binary Search Tree

Given an array where elements are sorted in ascending order, convert it to a height balanced BST.

class Solution {
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        if(nums.empty()) return NULL;
        TreeNode* root = sortedArrayToBST(nums,0,nums.size()-1);
        return root;
    }
    
    TreeNode* sortedArrayToBST(vector<int>& nums,int start,int end)
    {
        if(start>end) return NULL; 
        int mid = (start+end)/2;
        TreeNode * root = new TreeNode(nums[mid]);
        root->left = sortedArrayToBST(nums,start,mid-1);
        root->right = sortedArrayToBST(nums,mid+1,end);
        return root;
    }
};