82. Remove Duplicates from Sorted List II

Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

For example,
Given 1->2->3->3->4->4->5, return 1->2->5.
Given 1->1->1->2->3, return 2->3. 

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
       ListNode * deleteDuplicates(ListNode *head) {
        // write your code here
        if(head == NULL || head->next == NULL ) return head;
        ListNode* dummy = new ListNode(0);
        dummy->next = head;
        ListNode* p = dummy;
        
        while(p->next && p->next->next)
        {
            if(p->next->val == p->next->next->val)
            {
              int val = p->next->val;    
              while(p->next && p->next->val == val)
              {
               ListNode* t = p->next;
               p->next = p->next->next;
               t->next = NULL;
               delete t;
              }
            }
            else
            {
            p = p->next;
            }
        }
        return dummy->next;
    }
};