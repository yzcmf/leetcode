61. Rotate List

Given a list, rotate the list to the right by k places, where k is non-negative.

For example:
Given 1->2->3->4->5->NULL and k = 2,
return 4->5->1->2->3->NULL.

Subscribe to see which companies asked this question


class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(head == NULL) return head;
        int len = 0;
        ListNode * p = head;
        while(p)
        {
            len++;
            p = p->next;
        }
        
        k %= len;
        if(k == 0) return head;
        p =head;
        int l = len - k;
        
        while(l-1>0)
        {
            p = p->next;
            l--;
        }
        
        ListNode * newHead = p->next;
        p->next = NULL;
        
        p = newHead;
        while(p->next) 
        {
         p = p->next;
        }
        
        p->next = head;
        
        return newHead;
    }
};