5. Longest Palindromic Substring

Given a string S, find the longest palindromic substring in S. You may assume that the maximum length of S is 1000, and there exists one unique longest palindromic substring.

class Solution {
public:
    string longestPalindrome(string s) {
        if(s.empty() || s.size() == 1) return s;
        string res;
        int left,right;
        int len = 1;
        int start;
        for(int i=1;i<s.size();i++)
        {
            //For the odd;
            left = i-1;
            right = i+1;
            while(left>=0 && right<=s.size()-1 && s[left] == s[right])
            {
                if(right-left+1>res.size())
                res =s.substr(left,right-left+1);//Note:s.substr(pos,length);
                left--;
                right++;
            }
            
            //For the even
            left = i-1;
            right = i;
            while(left>=0 && right<=s.size()-1 && s[left] == s[right])
            {
                if(right-left+1>res.size())
                res =s.substr(left,right-left+1);//Note:s.substr(pos,length); -- pos is the index of the s;
                left--;
                right++;
            }
        }
        return res;
    }
};
