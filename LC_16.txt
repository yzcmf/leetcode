16. 3Sum Closest

Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).


class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        sort(nums.begin(),nums.end());
        int res = INT_MAX;
        if(nums.size()<3) return res;
        for(int i=0;i<nums.size()-2;i++)
        {
            int left=i+1,right=nums.size()-1;
            if(nums[i] == nums[i-1] && i>0) continue;
            while(left<right)
            {
              int diff = nums[i] + nums[left] + nums[right]-target;
              if(diff == 0) return target;
              else if(diff < 0)
              {
                  if(abs(diff)<abs(res))
                  res = diff;
                  left++;
                  while(nums[left] == nums[left-1]) left++;
              }
              else
              {
                 if(abs(diff)<abs(res))
                 res = diff;
                 right--;
                 while(nums[right] == nums[right+1]) right--;
              }
            }
        }
        return res+target;
    }
};