54. Spiral Matrix

Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.

For example,
Given the following matrix:

[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]

You should return [1,2,3,6,9,8,7,4,5]. 

class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int>res;
        if(matrix.empty()|| matrix[0].empty()) return res;
        int m = matrix.size();
        int n = matrix[0].size();
        int lvl = (min(m,n)+1)/2;
        
        for(int i=0;i<lvl;i++)
        {
            //From col i to lastCol;
            //From row i to lastRow;
            int lastRow = m-1-i;
            int lastCol = n-1-i;
            // Odd circle; -- Do not forget to add the last number;
            if(lastRow == i)
            {
               for(int j=i;j<=lastCol;j++)
               res.push_back(matrix[lastRow][j]); 
            }
            // Odd circle; -- Do not forget to add the last number;
            else if (lastCol == i)
            {
               for(int j=i;j<=lastRow;j++)
               res.push_back(matrix[j][lastCol]);  
            }
            // Even circle;
            else 
            {
              for(int j=i;j<lastCol;j++)
              res.push_back(matrix[i][j]);
              for(int j=i;j<lastRow;j++)
              res.push_back(matrix[j][lastCol]);
              for(int j=lastCol;j>i;j--)
              res.push_back(matrix[lastRow][j]);
              for(int j=lastRow;j>i;j--)
              res.push_back(matrix[j][i]);
            }
        }
        return res;
    }
};