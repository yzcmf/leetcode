257. Binary Tree Paths

    Total Accepted: 73475
    Total Submissions: 221914
    Difficulty: Easy
    Contributors: Admin

Given a binary tree, return all root-to-leaf paths.

For example, given the following binary tree:

   1
 /   \
2     3
 \
  5

All root-to-leaf paths are:

["1->2->5", "1->3"]

class Solution {
public:
vector<string> binaryTreePaths(TreeNode* root) {
        // Write your code here
        vector<string> res;
        vector<int> path;
        backtrack(root, path, res);
        return res;
}
private: 
    void backtrack(TreeNode* root, vector<int>& path, vector<string>& res){
        if(root == NULL) return;
        else if(root->left == NULL && root->right == NULL){
            string tmp = "";
            for(int i = 0; i<path.size(); i++){
                tmp += to_string(path[i]);
                tmp += "->";
            }
            tmp += to_string(root->val);
            res.push_back(tmp);
            return;
        }
        if(root->left != NULL){
            path.push_back(root->val);
            backtrack(root->left, path, res);
            path.pop_back();
        }
        if(root->right != NULL){
            path.push_back(root->val);
            backtrack(root->right, path, res);
            path.pop_back();
        }
    }
};