15. 3Sum

Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note: The solution set must not contain duplicate triplets.

For example, given array S = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>>res;
        sort(nums.begin(),nums.end());
        if(nums.size()<3) return res;//At least three numbers here;
        for(int i=0;i<nums.size()-2;i++)
        {
            if(nums[i] == nums[i-1] && i>0) continue;
            int left = i+1,right = nums.size()-1;
            while(left<right)
            {
                int sum = nums[left] + nums[right] + nums[i];
                if(sum == 0)
                {
                    vector<int>list;
                    list.push_back(nums[i]);
                    list.push_back(nums[left]);
                    list.push_back(nums[right]);
                    res.push_back(list);
                    right--;
                    left++;
                    while(nums[right] == nums[right+1]) right--;
                    while(nums[left] == nums[left-1]) left++;
                }
                else if(sum > 0)
                {
                right--;
                }
                else
                {
                left++;
                }
            }
        }
        return res;
    }
};