111. Minimum Depth of Binary Tree

Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.

class Solution {
public:
    int minDepth(TreeNode* root) {
        if(root == NULL) return 0;  
        int l= INT_MAX,r = INT_MAX;  
        if(root->left== NULL && root->right == NULL) return 1;  
        else{  
             if(root->left  != NULL) l = minDepth(root->left); //---If one branch,return the top;return:root => null,skip;  
             if(root->right != NULL) r = minDepth(root->right);//---If one branch,return the top;return:root => null,skip; 
        }  
        return min(l,r)+1;  
        //return min(minDepth(root->left),minDepth(root->right))+1; -- one branch problem occurred;return path:root => null
    }
};