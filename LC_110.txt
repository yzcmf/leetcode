110. Balanced Binary Tree

Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1. 

class Solution {
public:
    bool isBalanced(TreeNode* root) {
        bool res = true;
        int max_len=maxdepth(root,res);
        return res;
    }
private:
   int maxdepth(TreeNode *root,bool& res)
   {
       if(root == NULL) return 0;
       int leftdepth  = maxdepth(root->left,res);
       int rightdepth = maxdepth(root->right,res);
       if(abs(leftdepth-rightdepth)>1)
       {
           res = false;
           return INT_MAX;
       }
       return  max(leftdepth,rightdepth)+1;  
   }    
};