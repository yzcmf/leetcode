226. Invert Binary Tree

Invert a binary tree.

     4
   /   \
  2     7
 / \   / \
1   3 6   9

to

     4
   /   \
  7     2
 / \   / \
9   6 3   1

Trivia:
This problem was inspired by this original tweet by Max Howell:

    Google: 90% of our engineers use the software you wrote (Homebrew), but you canâ€™t invert a binary tree on a whiteboard so fuck off.

// -- iteration
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
       if(root == NULL) return NULL;
       queue<TreeNode*>q;
       q.push(root);
       while(!q.empty())
       {
           TreeNode* node = q.front();
           q.pop();
           swap(node->left,node->right);
           if(node->left) q.push(node->left); // -- q only has the no-null value;
           if(node->right)q.push(node->right);// -- q only has the no-null value;
       }
       return root;
    }
};