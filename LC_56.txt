56. Merge Intervals

Given a collection of intervals, merge all overlapping intervals.

For example,
Given [1,3],[2,6],[8,10],[15,18],
return [1,6],[8,10],[15,18]. 

class Solution {
public:
    struct comp{
        bool operator()(const Interval &a , const Interval &b)
        {
            return a.start<b.start;
        }
    };  
    vector<Interval> merge(vector<Interval> &intervals) {
        // write your code here
        sort(intervals.begin(),intervals.end(),comp());
        vector<Interval> res;
        for(int i=0;i<intervals.size();i++)
        {
            //No-overlap;
            if(res.empty() || res.back().end < intervals[i].start)
            res.push_back(intervals[i]);
            //Over-lap;
            else
            {
              res.back().end = max(intervals[i].end,res.back().end);
            }
        }
        return res;
    }
};