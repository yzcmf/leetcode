64. Minimum Path Sum

Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.

class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        if(grid.empty()||grid[0].empty()) return 0;
        for(int i=1;i<grid.size();i++) grid[i][0] += grid[i-1][0];
        for(int j=1;j<grid[0].size();j++) grid[0][j] += grid[0][j-1];
        for(int i=1;i<grid.size();i++)
          for(int j=1;j<grid[0].size();j++)
            grid[i][j] += min(grid[i][j-1],grid[i-1][j]);
        return grid[grid.size()-1][grid[0].size()-1];
    }
};