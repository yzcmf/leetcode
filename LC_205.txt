205. Isomorphic Strings

Given two strings s and t, determine if they are isomorphic.

Two strings are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.

For example,
Given "egg", "add", return true.

Given "foo", "bar", return false.

Given "paper", "title", return true.

Note:
You may assume both s and t have the same length.

class Solution {
public:
    bool isIsomorphic(string s, string t) {
    map<char, char> m1;
    map<char, char> m2;
    bool flag = true;
    
    //Given "egg", "add", return true.
    //Given "foo", "bar", return false.
    //Given "paper", "title", return true.
    for(int i=0; i<s.size(); ++i)
    {
        if(m1.find(s[i])==m1.end() && m2.find(t[i])==m2.end())
        {
            m1[s[i]] = t[i];
            m2[t[i]] = s[i];
        }
        else if(m1.find(s[i])!=m1.end() && m2.find(t[i])!=m2.end())
        {
            if(m1[s[i]]!=t[i] || m2[t[i]]!=s[i])
            {
                flag = false;
                break;
            }
        }
        else
        {
            flag = false;
            break;
        }
    }
    return flag;
    }
};