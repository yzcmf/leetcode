349. Intersection of Two Arrays

Given two arrays, write a function to compute their intersection.

Example:
Given nums1 = [1, 2, 2, 1], nums2 = [2, 2], return [2].

Note:

    Each element in the result must be unique.
    The result can be in any order.

class Solution {
public:
    // -- two pointers
    // vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
    //     // Write your code here
    //     sort(nums1.begin(),nums1.end());
    //     sort(nums2.begin(),nums2.end());
    //     vector<int> res;
    //     int i=0,j=0;
        
    //     while (i < nums1.size() && j < nums2.size()) {
    //         if (nums1[i] < nums2[j]) i++;
    //         else if (nums1[i] > nums2[j]) j++;
    //         else {
    //             if (res.empty() || res.back() != nums1[i]) {
    //                 res.push_back(nums1[i]);
    //             }
    //             i++; j++;
    //         }
    //     }
    //     return res;
    // }
// -- hash set
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
        // Write your code here
        set<int> s(nums1.begin(),nums1.end());
        set<int> res;
        for(auto a: nums2)
        {
            if(s.count(a))//returns the numbers of matches(set: 1 or 0);
            res.insert(a); 
        }
        return vector<int>(res.begin(),res.end());
    }
};