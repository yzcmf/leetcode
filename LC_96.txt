96. Unique Binary Search Trees

Given n, how many structurally unique BST's (binary search trees) that store values 1...n?

For example,
Given n = 3, there are a total of 5 unique BST's.

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3


class Solution {
public:
    /**
     * @paramn n: An integer
     * @return: An integer
     */
    int numTrees(int n) {
        // write your code here
        if(n<0) return 0;
        vector<int>count(n+1,0);
        count[0] = 1;
        for(int i=1;i<=n;i++)
        {
            for(int j=0;j<i;j++)
            {
                count[i] += count[j] * count[i-1-j];
            }
        }
        return count[n];
    }
};
//http://codinggamestart.blogspot.com/2015/08/lintcode-unique-binary-search-trees.html
//http://bangbingsyb.blogspot.com/2014/11/leetcode-unique-binary-search-trees-i-ii.html