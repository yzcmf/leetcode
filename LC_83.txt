83. Remove Duplicates from Sorted List

Given a sorted linked list, delete all duplicates such that each element appear only once.

For example,
Given 1->1->2, return 1->2.
Given 1->1->2->3->3, return 1->2->3. 

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    /**
     * @param head: The first node of linked list.
     * @return: head node
     */
    ListNode *deleteDuplicates(ListNode *head) {
        // write your code here
        ListNode * p = head;
        
        while(p && p->next)
        {
            if(p->val == p->next->val)
            {
             ListNode * t = p->next;
             p->next= t->next;
             t->next= NULL;
             delete t;
            }
            else
            {
            p = p->next;
            }
        }
        
        return head;
    }
};
